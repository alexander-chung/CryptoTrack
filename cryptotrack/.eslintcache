[{"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\index.js":"1","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\App.js":"2","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\Coin.js":"3","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\MainPage.js":"4","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CoinDetailPage.js":"5","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CoinChart.js":"6","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CoinDetails.js":"7","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\api\\coinGecko.js":"8","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\NavBar.js":"9"},{"size":462,"mtime":1610399665685,"results":"10","hashOfConfig":"11"},{"size":518,"mtime":1610326335809,"results":"12","hashOfConfig":"11"},{"size":1931,"mtime":1610739199617,"results":"13","hashOfConfig":"11"},{"size":10192,"mtime":1610769119370,"results":"14","hashOfConfig":"11"},{"size":2301,"mtime":1610742812951,"results":"15","hashOfConfig":"11"},{"size":3937,"mtime":1610749223172,"results":"16","hashOfConfig":"11"},{"size":2829,"mtime":1610750597973,"results":"17","hashOfConfig":"11"},{"size":110,"mtime":1609701702031,"results":"18","hashOfConfig":"11"},{"size":1588,"mtime":1610769084414,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1h0ueqs",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\index.js",[],["42","43"],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\App.js",[],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\Coin.js",[],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\MainPage.js",["44","45","46","47","48"],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CoinDetailPage.js",["49"],"import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom';\r\nimport CoinChart from './CoinChart';\r\nimport CoinDetails from './CoinDetails';\r\nimport coinGecko from '../api/coinGecko';\r\nimport NavBar from './NavBar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n\r\nexport default function CoinDetailPage() {\r\n  const { id } = useParams()\r\n  const [coinData, setCoinData] = useState({})\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  \r\n  const formatData = data => {\r\n    return data.map(price => {\r\n      return {\r\n        t: price[0],\r\n        y: price[1].toFixed(7)\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true)\r\n      const [ history1d, history7d, history30d, historyYear, details ] = await Promise.all([\r\n        coinGecko.get(`/coins/${id}/market_chart/`, {\r\n          params: {\r\n            vs_currency: 'usd',\r\n            days: '1'\r\n          }\r\n        }),\r\n        coinGecko.get(`/coins/${id}/market_chart/`, {\r\n          params: {\r\n            vs_currency: 'usd',\r\n            days: '7'\r\n          }\r\n        }),\r\n        coinGecko.get(`/coins/${id}/market_chart/`, {\r\n          params: {\r\n            vs_currency: 'usd',\r\n            days: '30'\r\n          }\r\n        }),\r\n        coinGecko.get(`/coins/${id}/market_chart/`, {\r\n          params: {\r\n            vs_currency: 'usd',\r\n            days: '365'\r\n          }\r\n        }),\r\n        coinGecko.get(`/coins/markets/`, {\r\n          params: {\r\n            vs_currency: 'usd',\r\n            ids: id,\r\n            price_change_percentage: '1h,24h,7d'\r\n          }\r\n        })\r\n      ]);\r\n    setCoinData({\r\n      day: formatData(history1d.data.prices), \r\n      week: formatData(history7d.data.prices), \r\n      month: formatData(history30d.data.prices),\r\n      year: formatData(historyYear.data.prices),\r\n      details: details.data[0]\r\n    })\r\n    setLoading(false)\r\n    }\r\n    fetchData()\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      {loading ? \r\n        <CircularProgress className='loading-bar' color=\"secondary\" />\r\n      :\r\n        <div>\r\n          <CoinDetails details={coinData.details}/>\r\n          <CoinChart id={id} coinData={coinData}/>  \r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CoinChart.js",["50"],"import React, {useState, useEffect} from 'react'\r\nimport {Line} from '@reactchartjs/react-chart.js'\r\nimport './CoinChart.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { Chart } from 'react-chartjs-2';\r\n\r\n\r\nexport default function CoinChart({id, coinData}) {\r\n  const {day, week, month, year, details} = coinData\r\n  const [timeFormat, setTimeFormat] = useState('day')\r\n\r\n  const numberWithCommas = (x) => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  const formatTime = () => {\r\n    switch (timeFormat) {\r\n      case 'day':\r\n        return day\r\n      case 'week':\r\n        return week\r\n      case 'month':\r\n        return month\r\n      case 'year':\r\n        return year\r\n      default:\r\n        return day\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    Chart.pluginService.register({\r\n      afterDraw: function(chart, easing) {\r\n        if (chart.tooltip._active && chart.tooltip._active.length) {\r\n          const activePoint = chart.controller.tooltip._active[0];\r\n          const ctx = chart.ctx;\r\n          const x = activePoint.tooltipPosition().x;\r\n          const topY = chart.scales['y-axis-0'].top;\r\n          const bottomY = chart.scales['y-axis-0'].bottom;\r\n          ctx.save();\r\n          ctx.beginPath();\r\n          ctx.moveTo(x, topY);\r\n          ctx.lineTo(x, bottomY);\r\n          ctx.lineWidth = 1;\r\n          ctx.strokeStyle = \"#808080\";\r\n          ctx.setLineDash([5])\r\n          ctx.stroke();\r\n          ctx.restore();\r\n        }\r\n      }\r\n    });\r\n  }, [])\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        label: '$',\r\n        data: formatTime(),\r\n        backgroundColor: \"rgb(64,150,233, 0.1)\",\r\n        borderColor: 'rgb(80,150,255)',\r\n        borderWidth: 1.5,\r\n        pointRadius: 0,\r\n        pointHitRadius: 0\r\n      },\r\n    ]\r\n  }\r\n  \r\n  const options = {\r\n    // title: {\r\n    //   display: false,\r\n    //   text: `${id.charAt(0).toUpperCase() + id.slice(1)} Chart`,\r\n    //   fontColor: 'black',\r\n    //   fontSize: 18,\r\n    // },\r\n    tooltips: {\r\n      mode: 'index',\r\n      intersect: false,\r\n      callbacks: {\r\n        label: (tooltipItem, data) =>  {\r\n          return \"Price: \" + numberWithCommas(tooltipItem.yLabel.toFixed(2));\r\n        },\r\n      }\r\n   },\r\n\r\n   hover: {\r\n      mode: 'index',\r\n      intersect: false,\r\n   },\r\n    legend: {\r\n      display: false\r\n    },\r\n    animation: {\r\n      display: true,\r\n      duration: 500\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [{\r\n          type: \"time\",\r\n          time: {\r\n            tooltipFormat:'MM/DD/YYYY HH:mm',\r\n          },\r\n          distribution: \"linear\",\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n          ticks: {\r\n            beginAtZero: true,\r\n            fontColor: \"black\",\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [{\r\n          ticks: {\r\n            fontColor: \"black\",\r\n          },\r\n          gridLines: {\r\n            color: \"black\",\r\n            lineWidth: 0.25\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='coin-chart'>\r\n      <ButtonGroup color=\"primary\" aria-label=\"primary button group\" className='history-buttons'>\r\n          <Button className={timeFormat === \"day\" ? 'active-button' : 'regular-button'} onClick={() => setTimeFormat('day')}>1d</Button>\r\n          <Button className={timeFormat === \"week\" ? 'active-button' : 'regular-button'} onClick={() => setTimeFormat('week')}>7d</Button>\r\n          <Button className={timeFormat === \"month\" ? 'active-button' : 'regular-button'} onClick={() => setTimeFormat('month')}>30d</Button>\r\n          <Button className={timeFormat === \"year\" ? 'active-button' : 'regular-button'} onClick={() => setTimeFormat('year')}>1Y</Button>\r\n      </ButtonGroup>\r\n      <Line \r\n          data={data}\r\n          options={options}\r\n          />\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CoinDetails.js",["51"],"import React from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nexport default function CoinDetails( {details}) {\r\n\r\n  const numberWithCommas = (x) => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n    { details ?\r\n    <div>\r\n      <div style={{display: 'flex', justifyContent: 'center', marginBottom: '32px'}}>\r\n        <div style={{float: 'left', width: '1000px'}}>\r\n          <div style={{display: 'flex', flexDirection: 'row'}}>\r\n            <img src={details.image} style={{height: '65px', width:'65px', marginLeft: '5px', marginRight: '10px'}}></img>\r\n            <h1 style={{transform: 'translateY(10px)'}}>{details.name}</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='chart-info-container'>\r\n        <div className='chart-info'>\r\n          <div className='info-box'>\r\n            <div className='info-title'>Price</div>\r\n            <div>\r\n              <span className='info-data'>${(numberWithCommas(details.current_price.toFixed(2)))}</span>\r\n            </div>\r\n          </div>\r\n          <div className='info-box'>\r\n            <div className='info-title'>1 hour</div>\r\n            <div>\r\n              <span className='info-data' style={{color: details.price_change_percentage_1h_in_currency < 0 ? ' #F4282D' : '#33C15D'}}>{parseFloat(details.price_change_percentage_1h_in_currency).toFixed(2)}%</span>\r\n            </div>\r\n          </div>\r\n          <div className='info-box'>\r\n            <div className='info-title'>1 day</div>\r\n            <div>\r\n              <span className='info-data' style={{color: details.price_change_percentage_24h_in_currency < 0 ? ' #F4282D' : '#33C15D'}}>{parseFloat(details.price_change_percentage_24h_in_currency).toFixed(2)}%</span>\r\n            </div>\r\n          </div>\r\n          <div className='info-box'>\r\n            <div className='info-title'>1 week</div>\r\n            <div>\r\n              <span className='info-data' style={{color: details.price_change_percentage_7d_in_currency < 0 ? ' #F4282D' : '#33C15D'}}>{parseFloat(details.price_change_percentage_7d_in_currency).toFixed(2)}%</span>\r\n            </div>\r\n          </div>\r\n          <div className='info-box'>\r\n            <div className='info-title'>Market Cap</div>\r\n            <div>\r\n              <span className='info-data'>${numberWithCommas(details.market_cap)}</span>\r\n            </div>\r\n          </div>\r\n          <div className='info-box'>\r\n            <div className='info-title'>24h volume</div>\r\n            <div>\r\n              <span className='info-data'>${numberWithCommas(details.total_volume)}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    : \r\n    <CircularProgress className='loading-bar' color=\"secondary\" />\r\n    }\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\api\\coinGecko.js",[],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\NavBar.js",["52","53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":23,"column":34,"nodeType":"60","messageId":"61","endLine":23,"endColumn":36},{"ruleId":"62","severity":1,"message":"63","line":26,"column":18,"nodeType":"64","messageId":"65","endLine":26,"endColumn":27},{"ruleId":"66","severity":1,"message":"67","line":58,"column":6,"nodeType":"68","endLine":58,"endColumn":8,"suggestions":"69"},{"ruleId":"62","severity":1,"message":"70","line":189,"column":11,"nodeType":"64","messageId":"65","endLine":189,"endColumn":15},{"ruleId":"62","severity":1,"message":"71","line":189,"column":17,"nodeType":"64","messageId":"65","endLine":189,"endColumn":32},{"ruleId":"66","severity":1,"message":"72","line":72,"column":6,"nodeType":"68","endLine":72,"endColumn":8,"suggestions":"73"},{"ruleId":"62","severity":1,"message":"74","line":10,"column":34,"nodeType":"64","messageId":"65","endLine":10,"endColumn":41},{"ruleId":"75","severity":1,"message":"76","line":18,"column":13,"nodeType":"77","endLine":18,"endColumn":117},{"ruleId":"62","severity":1,"message":"78","line":1,"column":16,"nodeType":"64","messageId":"65","endLine":1,"endColumn":24},{"ruleId":"62","severity":1,"message":"79","line":1,"column":26,"nodeType":"64","messageId":"65","endLine":1,"endColumn":35},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-unused-vars","'setSearch' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pageNumber'. Either include it or remove the dependency array.","ArrayExpression",["82"],"'user' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["83"],"'details' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [pageNumber]",{"range":"88","text":"89"},"Update the dependencies array to be: [id]",{"range":"90","text":"91"},[2343,2345],"[pageNumber]",[1985,1987],"[id]"]