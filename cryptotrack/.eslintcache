[{"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\index.js":"1","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\App.js":"2","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\Coin.js":"3","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\MainPage.js":"4","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CoinDetailPage.js":"5","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CoinChart.js":"6","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CoinDetails.js":"7","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\api\\coinGecko.js":"8","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\NavBar.js":"9","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CurrencyConverter.js":"10","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CurrencyRow.js":"11","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\Portfolio.js":"12"},{"size":540,"mtime":1611519258908,"results":"13","hashOfConfig":"14"},{"size":637,"mtime":1611168869303,"results":"15","hashOfConfig":"14"},{"size":1935,"mtime":1610863069549,"results":"16","hashOfConfig":"14"},{"size":8305,"mtime":1611606608832,"results":"17","hashOfConfig":"14"},{"size":2301,"mtime":1610742812951,"results":"18","hashOfConfig":"14"},{"size":3939,"mtime":1611179078406,"results":"19","hashOfConfig":"14"},{"size":4048,"mtime":1611610550585,"results":"20","hashOfConfig":"14"},{"size":110,"mtime":1609701702031,"results":"21","hashOfConfig":"14"},{"size":3993,"mtime":1611519052953,"results":"22","hashOfConfig":"14"},{"size":1423,"mtime":1611186990725,"results":"23","hashOfConfig":"14"},{"size":572,"mtime":1611034823274,"results":"24","hashOfConfig":"14"},{"size":4490,"mtime":1611610422422,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h0ueqs",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\index.js",[],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\App.js",[],["54","55"],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\Coin.js",[],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\MainPage.js",["56","57","58","59","60","61"],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CoinDetailPage.js",["62"],"import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom';\r\nimport CoinChart from './CoinChart';\r\nimport CoinDetails from './CoinDetails';\r\nimport coinGecko from '../api/coinGecko';\r\nimport NavBar from './NavBar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n\r\nexport default function CoinDetailPage() {\r\n  const { id } = useParams()\r\n  const [coinData, setCoinData] = useState({})\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  \r\n  const formatData = data => {\r\n    return data.map(price => {\r\n      return {\r\n        t: price[0],\r\n        y: price[1].toFixed(7)\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true)\r\n      const [ history1d, history7d, history30d, historyYear, details ] = await Promise.all([\r\n        coinGecko.get(`/coins/${id}/market_chart/`, {\r\n          params: {\r\n            vs_currency: 'usd',\r\n            days: '1'\r\n          }\r\n        }),\r\n        coinGecko.get(`/coins/${id}/market_chart/`, {\r\n          params: {\r\n            vs_currency: 'usd',\r\n            days: '7'\r\n          }\r\n        }),\r\n        coinGecko.get(`/coins/${id}/market_chart/`, {\r\n          params: {\r\n            vs_currency: 'usd',\r\n            days: '30'\r\n          }\r\n        }),\r\n        coinGecko.get(`/coins/${id}/market_chart/`, {\r\n          params: {\r\n            vs_currency: 'usd',\r\n            days: '365'\r\n          }\r\n        }),\r\n        coinGecko.get(`/coins/markets/`, {\r\n          params: {\r\n            vs_currency: 'usd',\r\n            ids: id,\r\n            price_change_percentage: '1h,24h,7d'\r\n          }\r\n        })\r\n      ]);\r\n    setCoinData({\r\n      day: formatData(history1d.data.prices), \r\n      week: formatData(history7d.data.prices), \r\n      month: formatData(history30d.data.prices),\r\n      year: formatData(historyYear.data.prices),\r\n      details: details.data[0]\r\n    })\r\n    setLoading(false)\r\n    }\r\n    fetchData()\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      {loading ? \r\n        <CircularProgress className='loading-bar' color=\"secondary\" />\r\n      :\r\n        <div>\r\n          <CoinDetails details={coinData.details}/>\r\n          <CoinChart id={id} coinData={coinData}/>  \r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CoinChart.js",["63"],"import React, {useState, useEffect} from 'react'\r\nimport {Line} from '@reactchartjs/react-chart.js'\r\nimport './CoinChart.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { Chart } from 'react-chartjs-2';\r\n\r\n\r\nexport default function CoinChart({id, coinData}) {\r\n  const {day, week, month, year, details} = coinData\r\n  const [timeFormat, setTimeFormat] = useState('day')\r\n\r\n  const numberWithCommas = (x) => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  const formatTime = () => {\r\n    switch (timeFormat) {\r\n      case 'day':\r\n        return day\r\n      case 'week':\r\n        return week\r\n      case 'month':\r\n        return month\r\n      case 'year':\r\n        return year\r\n      default:\r\n        return day\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    Chart.pluginService.register({\r\n      afterDraw: function(chart, easing) {\r\n        if (chart.tooltip._active && chart.tooltip._active.length) {\r\n          const activePoint = chart.controller.tooltip._active[0];\r\n          const ctx = chart.ctx;\r\n          const x = activePoint.tooltipPosition().x;\r\n          const topY = chart.scales['y-axis-0'].top;\r\n          const bottomY = chart.scales['y-axis-0'].bottom;\r\n          ctx.save();\r\n          ctx.beginPath();\r\n          ctx.moveTo(x, topY);\r\n          ctx.lineTo(x, bottomY);\r\n          ctx.lineWidth = 1;\r\n          ctx.strokeStyle = \"#808080\";\r\n          ctx.setLineDash([5])\r\n          ctx.stroke();\r\n          ctx.restore();\r\n        }\r\n      }\r\n    });\r\n  }, [])\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        label: '$',\r\n        data: formatTime(),\r\n        backgroundColor: \"rgb(64,150,233, 0.1)\",\r\n        borderColor: 'rgb(80,150,255)',\r\n        borderWidth: 1.5,\r\n        pointRadius: 0,\r\n        // pointHitRadius: 0\r\n      },\r\n    ]\r\n  }\r\n  \r\n  const options = {\r\n    // title: {\r\n    //   display: false,\r\n    //   text: `${id.charAt(0).toUpperCase() + id.slice(1)} Chart`,\r\n    //   fontColor: 'black',\r\n    //   fontSize: 18,\r\n    // },\r\n    tooltips: {\r\n      mode: 'index',\r\n      intersect: false,\r\n      callbacks: {\r\n        label: (tooltipItem, data) =>  {\r\n          return \"Price: \" + numberWithCommas(tooltipItem.yLabel.toFixed(2));\r\n        },\r\n      }\r\n   },\r\n\r\n   hover: {\r\n      mode: 'index',\r\n      intersect: true,\r\n   },\r\n    legend: {\r\n      display: false\r\n    },\r\n    animation: {\r\n      display: true,\r\n      duration: 500\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [{\r\n          type: \"time\",\r\n          time: {\r\n            tooltipFormat:'MM/DD/YYYY HH:mm',\r\n          },\r\n          distribution: \"linear\",\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n          ticks: {\r\n            beginAtZero: true,\r\n            fontColor: \"black\",\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [{\r\n          ticks: {\r\n            fontColor: \"black\",\r\n          },\r\n          gridLines: {\r\n            color: \"black\",\r\n            lineWidth: 0.25\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='coin-chart'>\r\n      <ButtonGroup color=\"primary\" aria-label=\"primary button group\" className='history-buttons'>\r\n          <Button className={timeFormat === \"day\" ? 'active-button' : 'regular-button'} onClick={() => setTimeFormat('day')}>1d</Button>\r\n          <Button className={timeFormat === \"week\" ? 'active-button' : 'regular-button'} onClick={() => setTimeFormat('week')}>7d</Button>\r\n          <Button className={timeFormat === \"month\" ? 'active-button' : 'regular-button'} onClick={() => setTimeFormat('month')}>30d</Button>\r\n          <Button className={timeFormat === \"year\" ? 'active-button' : 'regular-button'} onClick={() => setTimeFormat('year')}>1Y</Button>\r\n      </ButtonGroup>\r\n      <Line \r\n          data={data}\r\n          options={options}\r\n          />\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CoinDetails.js",["64","65"],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\api\\coinGecko.js",[],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\NavBar.js",[],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CurrencyConverter.js",["66"],"import React, {useState, useEffect} from 'react'\r\nimport CurrencyRow from './CurrencyRow'\r\nimport SyncAltIcon from '@material-ui/icons/SyncAlt';\r\n\r\nconst CurrencyConverter = ({ details }) => {\r\n  const [exchangeRate, setExchangeRate] = useState(1)\r\n  const [amount, setAmount] = useState(1)\r\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\r\n\r\n  let toAmount, fromAmount;\r\n  if (amountInFromCurrency) {\r\n    fromAmount = amount\r\n    toAmount = amount * exchangeRate\r\n  } else {\r\n    toAmount = amount\r\n    fromAmount = amount / exchangeRate\r\n  }\r\n\r\n  useEffect(() => {\r\n    setExchangeRate(details.current_price)\r\n  }, [])\r\n\r\n  const handleFromAmountChange = (e) => {\r\n    setAmount(e.target.value)\r\n    setAmountInFromCurrency(true)\r\n  }\r\n\r\n  const handleToAmountChange = (e) => {\r\n    setAmount(e.target.value)\r\n    setAmountInFromCurrency(false)\r\n  }\r\n\r\n  return (\r\n    <div style={{display: 'flex', flexDirection: 'row', height: '65px', alignItems:'center'}}>\r\n      <CurrencyRow \r\n        currencyText={details.symbol.toUpperCase()}\r\n        amount={fromAmount}\r\n        onChangeAmount={handleFromAmountChange}\r\n      />\r\n      <div style={{marginLeft: '5px', marginRight: '5px'}}><SyncAltIcon/></div> \r\n      <CurrencyRow\r\n        currencyText={'USD'}\r\n        amount={toAmount}\r\n        onChangeAmount={handleToAmountChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CurrencyConverter\r\n","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CurrencyRow.js",[],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\Portfolio.js",["67","68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":18,"column":34,"nodeType":"75","messageId":"76","endLine":18,"endColumn":36},{"ruleId":"77","severity":1,"message":"78","line":34,"column":25,"nodeType":"79","messageId":"80","endLine":34,"endColumn":35},{"ruleId":"81","severity":1,"message":"82","line":50,"column":6,"nodeType":"83","endLine":50,"endColumn":8,"suggestions":"84"},{"ruleId":"77","severity":1,"message":"85","line":159,"column":9,"nodeType":"79","messageId":"80","endLine":159,"endColumn":16},{"ruleId":"77","severity":1,"message":"86","line":161,"column":11,"nodeType":"79","messageId":"80","endLine":161,"endColumn":15},{"ruleId":"77","severity":1,"message":"87","line":161,"column":17,"nodeType":"79","messageId":"80","endLine":161,"endColumn":32},{"ruleId":"81","severity":1,"message":"88","line":72,"column":6,"nodeType":"83","endLine":72,"endColumn":8,"suggestions":"89"},{"ruleId":"77","severity":1,"message":"90","line":10,"column":34,"nodeType":"79","messageId":"80","endLine":10,"endColumn":41},{"ruleId":"77","severity":1,"message":"86","line":11,"column":11,"nodeType":"79","messageId":"80","endLine":11,"endColumn":15},{"ruleId":"91","severity":1,"message":"92","line":61,"column":15,"nodeType":"93","endLine":61,"endColumn":119},{"ruleId":"81","severity":1,"message":"94","line":21,"column":6,"nodeType":"83","endLine":21,"endColumn":8,"suggestions":"95"},{"ruleId":"81","severity":1,"message":"96","line":51,"column":6,"nodeType":"83","endLine":51,"endColumn":8,"suggestions":"97"},{"ruleId":"81","severity":1,"message":"98","line":78,"column":6,"nodeType":"83","endLine":78,"endColumn":16,"suggestions":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-unused-vars","'searchData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pageNumber'. Either include it or remove the dependency array.","ArrayExpression",["102"],"'history' is assigned a value but never used.","'user' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["103"],"'details' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'details.current_price'. Either include it or remove the dependency array. If 'setExchangeRate' needs the current value of 'details.current_price', you can also switch to useReducer instead of useState and read 'details.current_price' in the reducer.",["104"],"React Hook useEffect has missing dependencies: 'isAuthenticated' and 'user.sub'. Either include them or remove the dependency array.",["105"],"React Hook useEffect has a missing dependency: 'isAuthenticated'. Either include it or remove the dependency array.",["106"],"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [pageNumber]",{"range":"117","text":"118"},"Update the dependencies array to be: [id]",{"range":"119","text":"120"},"Update the dependencies array to be: [details.current_price]",{"range":"121","text":"122"},"Update the dependencies array to be: [isAuthenticated, user.sub]",{"range":"123","text":"124"},"Update the dependencies array to be: [isAuthenticated, userData]",{"range":"125","text":"126"},[1935,1937],"[pageNumber]",[1985,1987],"[id]",[643,645],"[details.current_price]",[1572,1574],"[isAuthenticated, user.sub]",[2260,2270],"[isAuthenticated, userData]"]