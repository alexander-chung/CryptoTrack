[{"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\index.js":"1","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\App.js":"2","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\Coin.js":"3","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\MainPage.js":"4","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CoinDetailPage.js":"5","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CoinChart.js":"6","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CoinDetails.js":"7","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\api\\coinGecko.js":"8","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\NavBar.js":"9","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CurrencyConverter.js":"10","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CurrencyRow.js":"11","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\Portfolio.js":"12"},{"size":462,"mtime":1610399665685,"results":"13","hashOfConfig":"14"},{"size":637,"mtime":1611168869303,"results":"15","hashOfConfig":"14"},{"size":1935,"mtime":1610863069549,"results":"16","hashOfConfig":"14"},{"size":8317,"mtime":1610773272202,"results":"17","hashOfConfig":"14"},{"size":2301,"mtime":1610742812951,"results":"18","hashOfConfig":"14"},{"size":3939,"mtime":1611179078406,"results":"19","hashOfConfig":"14"},{"size":3530,"mtime":1611166543367,"results":"20","hashOfConfig":"14"},{"size":110,"mtime":1609701702031,"results":"21","hashOfConfig":"14"},{"size":3900,"mtime":1611176353491,"results":"22","hashOfConfig":"14"},{"size":1423,"mtime":1611036726054,"results":"23","hashOfConfig":"14"},{"size":572,"mtime":1611034823274,"results":"24","hashOfConfig":"14"},{"size":177,"mtime":1611168897373,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1h0ueqs",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\index.js",[],["53","54"],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\App.js",[],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\Coin.js",[],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\MainPage.js",["55","56","57","58","59","60"],"import React, {useState, useEffect} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NavBar from './NavBar';\r\nimport Coin from './Coin';\r\nimport coinGecko from '../api/coinGecko';\r\n\r\nimport './MainPage.css';\r\nimport './Coin.css'\r\n\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nexport default function MainPage({}) {\r\n  const [coins, setCoins] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [sortRankAscending, setSortRankAscending] = useState(true);\r\n  const [sortNameAscending, setSortNameAscending] = useState(true);\r\n  const [sortPriceAscending, setSortPriceAscending] = useState(true);\r\n  const [sortHourAscending, setSortHourAscending] = useState(true);\r\n  const [sortDayAscending, setSortDayAscending] = useState(true);\r\n  const [sortWeekAscending, setSortWeekAscending] = useState(true);\r\n  const [sortVolumeAscending, setSortVolumeAscending] = useState(true);\r\n  const [sortMarketCapAscending, setSortMarketCapAscending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const [ mainData, searchData ] = await Promise.all([\r\n        coinGecko.get(`/coins/markets`, {\r\n          params: {\r\n            vs_currency: 'usd',\r\n            order: 'market_cap_desc',\r\n            per_page: 50,\r\n            page: pageNumber,\r\n            sparkline: true,\r\n            price_change_percentage: '1h,24h,7d'\r\n          }\r\n        }),\r\n        coinGecko.get(`/coins/list`)]);\r\n      setCoins(mainData.data)\r\n      setLoading(false)\r\n    }\r\n    fetchData()\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const res = await coinGecko.get(`/coins/markets`, {\r\n        params: {\r\n          vs_currency: 'usd',\r\n          order: 'market_cap_desc',\r\n          per_page: 50,\r\n          page: pageNumber,\r\n          sparkline: true,\r\n          price_change_percentage: '1h,24h,7d'\r\n        }\r\n      });\r\n      setCoins(res.data)\r\n      setLoading(false)\r\n    }\r\n    fetchData()\r\n  }, [pageNumber])\r\n\r\n  const sortByRank = (e) => {\r\n    let updateCoins;\r\n    if(sortRankAscending) {\r\n      updateCoins = coins.sort((a,b) => (a.market_cap_rank > b.market_cap_rank) ? -1 : 1);\r\n    }else{\r\n      updateCoins = coins.sort((a,b) => (a.market_cap_rank > b.market_cap_rank) ? 1 : -1);\r\n    }\r\n    setSortRankAscending(!sortRankAscending)\r\n    setCoins([...updateCoins])\r\n  }\r\n\r\n  const sortByName = (e) => {\r\n    let updateCoins;\r\n    if(sortNameAscending) {\r\n      updateCoins = coins.sort((a,b) => (a.name.toLowerCase() > b.name.toLowerCase()) ? -1 : 1);\r\n    }else{\r\n      updateCoins = coins.sort((a,b) => (a.name.toLowerCase() > b.name.toLowerCase()) ? 1 : -1);\r\n    }\r\n    setSortNameAscending(!sortNameAscending)\r\n    setCoins([...updateCoins])\r\n  }\r\n\r\n  const sortByPrice = (e) => {\r\n    let updateCoins;\r\n    if(sortPriceAscending) {\r\n      updateCoins = coins.sort((a,b) => (a.current_price > b.current_price) ? -1 : 1);\r\n    }else{\r\n      updateCoins = coins.sort((a,b) => (a.current_price > b.current_price) ? 1 : -1);\r\n    }\r\n    setSortPriceAscending(!sortPriceAscending)\r\n    setCoins([...updateCoins])\r\n  }\r\n\r\n  const sortByHour = (e) => {\r\n    let updateCoins;\r\n    if(sortHourAscending) {\r\n      updateCoins = coins.sort((a,b) => (a.price_change_percentage_1h_in_currency > b.price_change_percentage_1h_in_currency) ? -1 : 1);\r\n    }else{\r\n      updateCoins = coins.sort((a,b) => (a.price_change_percentage_1h_in_currency > b.price_change_percentage_1h_in_currency) ? 1 : -1);\r\n    }\r\n    setSortHourAscending(!sortHourAscending)\r\n    setCoins([...updateCoins])\r\n  }\r\n\r\n  const sortByDay = (e) => {\r\n    let updateCoins;\r\n    if(sortDayAscending) {\r\n      updateCoins = coins.sort((a,b) => (a.price_change_percentage_24h_in_currency > b.price_change_percentage_24h_in_currency) ? -1 : 1);\r\n    }else{\r\n      updateCoins = coins.sort((a,b) => (a.price_change_percentage_24h_in_currency > b.price_change_percentage_24h_in_currency) ? 1 : -1);\r\n    }\r\n    setSortDayAscending(!sortDayAscending)\r\n    setCoins([...updateCoins])\r\n  }\r\n\r\n  const sortByWeek = (e) => {\r\n    let updateCoins;\r\n    if(sortWeekAscending) {\r\n      updateCoins = coins.sort((a,b) => (a.price_change_percentage_7d_in_currency > b.price_change_percentage_7d_in_currency) ? -1 : 1);\r\n    }else{\r\n      updateCoins = coins.sort((a,b) => (a.price_change_percentage_7d_in_currency > b.price_change_percentage_7d_in_currency) ? 1 : -1);\r\n    }\r\n    setSortWeekAscending(!sortWeekAscending)\r\n    setCoins([...updateCoins])\r\n  }\r\n\r\n  const sortByVolume = (e) => {\r\n    let updateCoins;\r\n    if(sortVolumeAscending) {\r\n      updateCoins = coins.sort((a,b) => (a.total_volume > b.total_volume) ? -1 : 1);\r\n    }else{\r\n      updateCoins = coins.sort((a,b) => (a.total_volume > b.total_volume) ? 1 : -1);\r\n    }\r\n    setSortVolumeAscending(!sortVolumeAscending)\r\n    setCoins([...updateCoins])\r\n  }\r\n\r\n  const sortByMarketCap = (e) => {\r\n    let updateCoins;\r\n    if(sortMarketCapAscending) {\r\n      updateCoins = coins.sort((a,b) => (a.market_cap > b.market_cap) ? -1 : 1);\r\n    }else{\r\n      updateCoins = coins.sort((a,b) => (a.market_cap > b.market_cap) ? 1 : -1);\r\n    }\r\n    setSortMarketCapAscending(!sortMarketCapAscending)\r\n    setCoins([...updateCoins])\r\n  }\r\n\r\n  const history = useHistory();\r\n\r\n  const { user, isAuthenticated } = useAuth0();\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div className='coin-app'>\r\n          <div className='pagination-button'>\r\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n              <Button disabled={pageNumber=== 1 ? true : false} onClick={() => setPageNumber(pageNumber - 1)}><NavigateBeforeIcon/></Button>\r\n              <Button onClick={() => setPageNumber(pageNumber + 1)}><NavigateNextIcon/></Button>\r\n            </ButtonGroup>\r\n          </div>\r\n        <div className='coin-list'>\r\n          <div className='coin-list-header' >\r\n            <div className='coin-row'>\r\n              <div className='coin'>\r\n                <span className='coin-market-cap-rank' onClick={sortByRank} style={{cursor: 'pointer' }}>#</span>\r\n                <h1 className='coin-name' onClick={sortByName} style={{cursor: 'pointer' }}>Coin</h1>\r\n              </div>\r\n              <div className='coin-data' style={{justifyContent: 'normal'}}>\r\n                <span className='coin-price' onClick={sortByPrice} style={{cursor: 'pointer' }}>Price</span>\r\n                <span className='coin-percent' onClick={sortByHour} style={{cursor: 'pointer' }}>1h</span>\r\n                <span className='coin-percent' onClick={sortByDay} style={{cursor: 'pointer' }}>24h</span>\r\n                <span className='coin-percent' onClick={sortByWeek} style={{cursor: 'pointer' }}>7d</span>\r\n                <span className='coin-volume' onClick={sortByVolume} style={{cursor: 'pointer' }}>24h Volume</span>\r\n                <span className='coin-market-cap' style={{transform: 'translate(10px, 0px)', cursor: 'pointer'}} onClick={sortByMarketCap} >Mkt Cap</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {loading ? \r\n            <CircularProgress className='loading-bar' color=\"secondary\" />\r\n          : coins.map((coin) => (\r\n            <Coin\r\n              key={coin.id}\r\n              coinId={coin.id}\r\n              coinName={coin.name}\r\n              coinImage={coin.image}\r\n              coinSymbol={coin.symbol}\r\n              coinPrice={coin.current_price}\r\n              coinVolume={coin.total_volume}\r\n              pricechange1h={coin.price_change_percentage_1h_in_currency}\r\n              priceChange24h={coin.price_change_percentage_24h_in_currency}\r\n              pricechange7d={coin.price_change_percentage_7d_in_currency}\r\n              marketCap={coin.market_cap}\r\n              marketCapRank={coin.market_cap_rank}\r\n            />\r\n          ))\r\n          }\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CoinDetailPage.js",["61"],"import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom';\r\nimport CoinChart from './CoinChart';\r\nimport CoinDetails from './CoinDetails';\r\nimport coinGecko from '../api/coinGecko';\r\nimport NavBar from './NavBar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n\r\nexport default function CoinDetailPage() {\r\n  const { id } = useParams()\r\n  const [coinData, setCoinData] = useState({})\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  \r\n  const formatData = data => {\r\n    return data.map(price => {\r\n      return {\r\n        t: price[0],\r\n        y: price[1].toFixed(7)\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true)\r\n      const [ history1d, history7d, history30d, historyYear, details ] = await Promise.all([\r\n        coinGecko.get(`/coins/${id}/market_chart/`, {\r\n          params: {\r\n            vs_currency: 'usd',\r\n            days: '1'\r\n          }\r\n        }),\r\n        coinGecko.get(`/coins/${id}/market_chart/`, {\r\n          params: {\r\n            vs_currency: 'usd',\r\n            days: '7'\r\n          }\r\n        }),\r\n        coinGecko.get(`/coins/${id}/market_chart/`, {\r\n          params: {\r\n            vs_currency: 'usd',\r\n            days: '30'\r\n          }\r\n        }),\r\n        coinGecko.get(`/coins/${id}/market_chart/`, {\r\n          params: {\r\n            vs_currency: 'usd',\r\n            days: '365'\r\n          }\r\n        }),\r\n        coinGecko.get(`/coins/markets/`, {\r\n          params: {\r\n            vs_currency: 'usd',\r\n            ids: id,\r\n            price_change_percentage: '1h,24h,7d'\r\n          }\r\n        })\r\n      ]);\r\n    setCoinData({\r\n      day: formatData(history1d.data.prices), \r\n      week: formatData(history7d.data.prices), \r\n      month: formatData(history30d.data.prices),\r\n      year: formatData(historyYear.data.prices),\r\n      details: details.data[0]\r\n    })\r\n    setLoading(false)\r\n    }\r\n    fetchData()\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      {loading ? \r\n        <CircularProgress className='loading-bar' color=\"secondary\" />\r\n      :\r\n        <div>\r\n          <CoinDetails details={coinData.details}/>\r\n          <CoinChart id={id} coinData={coinData}/>  \r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CoinChart.js",["62"],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CoinDetails.js",["63"],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\api\\coinGecko.js",[],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\NavBar.js",[],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CurrencyConverter.js",["64"],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\CurrencyRow.js",[],"C:\\Users\\Alexander\\Desktop\\Personal Projects\\CryptoTrack\\cryptotrack\\src\\components\\Portfolio.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":18,"column":34,"nodeType":"71","messageId":"72","endLine":18,"endColumn":36},{"ruleId":"73","severity":1,"message":"74","line":34,"column":25,"nodeType":"75","messageId":"76","endLine":34,"endColumn":35},{"ruleId":"77","severity":1,"message":"78","line":50,"column":6,"nodeType":"79","endLine":50,"endColumn":8,"suggestions":"80"},{"ruleId":"73","severity":1,"message":"81","line":159,"column":9,"nodeType":"75","messageId":"76","endLine":159,"endColumn":16},{"ruleId":"73","severity":1,"message":"82","line":161,"column":11,"nodeType":"75","messageId":"76","endLine":161,"endColumn":15},{"ruleId":"73","severity":1,"message":"83","line":161,"column":17,"nodeType":"75","messageId":"76","endLine":161,"endColumn":32},{"ruleId":"77","severity":1,"message":"84","line":72,"column":6,"nodeType":"79","endLine":72,"endColumn":8,"suggestions":"85"},{"ruleId":"73","severity":1,"message":"86","line":10,"column":34,"nodeType":"75","messageId":"76","endLine":10,"endColumn":41},{"ruleId":"87","severity":1,"message":"88","line":46,"column":15,"nodeType":"89","endLine":46,"endColumn":119},{"ruleId":"77","severity":1,"message":"90","line":21,"column":6,"nodeType":"79","endLine":21,"endColumn":8,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-unused-vars","'searchData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pageNumber'. Either include it or remove the dependency array.","ArrayExpression",["94"],"'history' is assigned a value but never used.","'user' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["95"],"'details' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'details.current_price'. Either include it or remove the dependency array. If 'setExchangeRate' needs the current value of 'details.current_price', you can also switch to useReducer instead of useState and read 'details.current_price' in the reducer.",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [pageNumber]",{"range":"103","text":"104"},"Update the dependencies array to be: [id]",{"range":"105","text":"106"},"Update the dependencies array to be: [details.current_price]",{"range":"107","text":"108"},[1935,1937],"[pageNumber]",[1985,1987],"[id]",[643,645],"[details.current_price]"]